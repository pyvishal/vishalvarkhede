forecast_df.columns
['OrganizationType', 'Quarter', 'Value']

Trend_2023.columns
['OrganizationType', 'Quarterly_Trend_Num', 'count']

import org.apache.spark.sql.SparkSession
import org.apache.spark.sql.functions._
import org.apache.spark.sql.expressions.Window

// Create SparkSession
val spark = SparkSession.builder()
  .appName("Trend Line Plot")
  .getOrCreate()

// Assuming you have loaded your DataFrames forecast_df and Trend_2023

// Calculate trend lines for 2023
val trend_2023_with_trend = Trend_2023.withColumn("trend", avg($"count").over(Window.partitionBy("OrganizationType").orderBy("Quarterly_Trend_Num").rowsBetween(-1,1)))

// Convert Spark DataFrame to Pandas DataFrame for plotting
val forecast_df_df = forecast_df.toPandas()
val trend_2023_df = trend_2023_with_trend.toPandas()

// Plot trend lines for 2023
import matplotlib.pyplot as plt

plt.figure(figsize=(10,6))
for org_type, data in trend_2023_df.groupby("OrganizationType"):
    plt.plot(data["Quarterly_Trend_Num"], data["count"], label=org_type)
    plt.plot(data["Quarterly_Trend_Num"], data["trend"], linestyle='--', label=f"Trend {org_type} 2023")

plt.xlabel("Quarter")
plt.ylabel("Value")
plt.title("Trend Line Plot for 2023")
plt.legend()
plt.show()
