import cv2
import matplotlib.pyplot as plt

# Load the image
image = cv2.imread('path_to_your_image.jpg')
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
blurred = cv2.GaussianBlur(gray, (5, 5), 0)

# Perform edge detection
edges = cv2.Canny(blurred, 50, 150)

# Find contours
contours, _ = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# Define a minimum area to consider as "big"
min_area = 1000  # Adjust this value based on your requirements

# List to hold bounding boxes of big objects
big_objects = []

# Filter contours based on area
for contour in contours:
    area = cv2.contourArea(contour)
    if area > min_area:
        x, y, w, h = cv2.boundingRect(contour)
        big_objects.append((x, y, w, h))
        # Draw the bounding box
        cv2.rectangle(image, (x, y), (x + w, y + h), (0, 255, 0), 2)

# Display the result using matplotlib
plt.figure(figsize=(10, 10))
plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
plt.title(f'Detected Big Objects: {len(big_objects)}')
plt.axis('off')
plt.show()

print(f'Number of big objects detected: {len(big_objects)}')
